server {
    listen 80;
    # gzip config
    gzip on;
    gzip_min_length 1k;
    gzip_comp_level 9;
    gzip_types text/plain text/css text/javascript application/json application/javascript application/x-javascript application/xml;
    gzip_vary on;
    gzip_disable "MSIE [1-6]\.";

    root /usr/share/nginx/html;



  location @prerender {
    resolver kube-dns.kube-system.svc.cluster.local valid=5s;

    set $prerender 0;

    if ($prerender = 0) {
      add_header PREZERO yes;
      rewrite .* /index.html break;

    }
  }
  location /product-service/api/ {
    resolver kube-dns.kube-system.svc.cluster.local valid=5s;
    rewrite ^/product-service/api(.*) $1 break;
    proxy_pass  $PRIVATE_PRODUCT_ENDPOINT;
    proxy_pass_request_headers on;
  }

  location /policy-service/api/ {
    resolver kube-dns.kube-system.svc.cluster.local valid=5s;
    rewrite ^/policy-service/api(.*) $1 break;
    proxy_pass  $PRIVATE_POLICY_ENDPOINT;
    proxy_pass_request_headers on;
  }

  location /user-service/api/ {
    resolver kube-dns.kube-system.svc.cluster.local valid=5s;
    rewrite ^/user-service/api(.*) $1 break;
    proxy_pass  $PRIVATE_USER_ENDPOINT;
    proxy_pass_request_headers on;
  }

  location /ext-user-service/api/ {
    resolver kube-dns.kube-system.svc.cluster.local valid=5s;
    rewrite ^/ext-user-service/api(.*) $1 break;
    proxy_pass  $PRIVATE_EXT_USER_ENDPOINT;
    proxy_pass_request_headers on;
  }

  location /auth-service/ {
    resolver kube-dns.kube-system.svc.cluster.local valid=5s;
    rewrite ^/auth-service/api(.*) $1 break;
    proxy_pass  $PRIVATE_AUTH_ENDPOINT;
  }

  location /claim-service/api/ {
    resolver kube-dns.kube-system.svc.cluster.local valid=5s;
    rewrite ^/claim-service/api(.*) $1 break;
    proxy_pass $PRIVATE_CLAIM_ENDPOINT;
    proxy_pass_request_headers on;
  }

  location /integration-service/api/ {
    resolver kube-dns.kube-system.svc.cluster.local valid=5s;
    rewrite ^/integration-service/api(.*) $1 break;
    proxy_pass $PRIVATE_INTEGRATION_ENDPOINT;
    proxy_pass_request_headers on;
  }

  location / {
      try_files $uri @prerender;
  }
}
